{"version":3,"sources":["components/search.js","chart.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","symbols","fields","date","currentSymbol","handleChange","bind","handleClick","fetch","then","response","json","data","setState","this","onSearch","event","target","name","value","type","placeholder","onChange","map","symbol","onClick","Component","Chart","stocks","handleSearch","parseDate","d3","method","body","JSON","stringify","headers","d","open","open_price","drawChart","y0","y1","f","stockData","slice","document","querySelector","innerHTML","width","margin","svg","append","attr","x","domain","range","length","filter","getUTCDay","padding","y","low","high","rangeRound","formatDate","formatValue","call","g","tickValues","every","tickFormat","select","remove","ticks","selectAll","clone","join","close","bandwidth","text","formatChange","React","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3f9d6c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbols: [],\n            fields: {\n                date: '', \n                currentSymbol: ''\n            }\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:8000/stocks/symbols/', {})\n        .then(response=> response.json())\n        .then(data=>{\n            this.setState({\n                symbols: data.symbols\n            })\n        })\n    }\n\n    handleClick() {\n        this.props.onSearch(this.state.fields)\n    }\n\n    handleChange(event) {\n        let fields = this.state.fields;\n        fields[event.target.name] = event.target.value;\n        this.setState({ fields })\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"date\" placeholder=\"Enter date\" name='date' value={this.state.fields.date} onChange={this.handleChange}/>\n                <select name=\"currentSymbol\" value={this.state.fields.currentSymbol} onChange={this.handleChange}>\n                    {this.state.symbols.map(symbol=> (\n                        <option value={symbol} >{symbol}</option>\n                    ))}\n                </select>\n                <button onClick={this.handleClick}>Submit</button>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport * as d3 from 'd3';\nimport SearchBar from './components/search';\nimport { thresholdSturges } from 'd3';\n\n\n\nclass Chart extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            stocks: []\n        }\n        this.handleSearch = this.handleSearch.bind(this);\n\n    }\n    \n    handleSearch(fields) {\n        var parseDate = d3.utcParse(\"%Y-%m-%d\")\n        fetch('http://localhost:8000/stocks/get-stocks/', {\n            method: \"POST\",\n            body: JSON.stringify({\n                symbol: fields.currentSymbol,\n                date: fields.date\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'accept': 'application/json'\n            },\n        })\n        .then(response => response.json())\n\n        .then(data => {\n            this.setState({\n                stocks: data.map(d => {d.date = parseDate(d.date);d.open=d.open_price;return d;})\n            });\n            this.drawChart(this.state.stocks)\n        })\n    }\n\n    \n    formatChange (y0, y1) {\n        const f = d3.format(\"+.2%\");\n        return f((y1 - y0) / y0);\n    }\n    \n    componentDidMount() {\n        var parseDate = d3.utcParse(\"%Y-%m-%d\")\n        \n        fetch('http://localhost:8000/stock/', {})\n            .then((response) => {\n                return response.json()\n            })\n            .then((stockData) => {\n                this.setState({\n                    stocks: stockData.slice(-100).map(d => {d.date = parseDate(d.date);d.open=d.open_price;return d;})\n                });\n              this.drawChart(this.state.stocks);\n            })\n    }\n\n    drawChart(data) {\n        document.querySelector('.chart-area').innerHTML = '';\n        const height = 500;\n        const width = 1000;\n        const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n        \n        const svg = d3.select('.chart-area').append('svg').attr('width', width).attr('height', height)\n        \n        var x = d3.scaleBand()\n            .domain(d3.utcDay\n                .range(data[0].date, +data[data.length - 1].date + 1)\n                .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\n            .range([margin.left, width - margin.right])\n            .padding(0.2)\n    \n        // -----------------------------------\n        var y = d3.scaleLog()\n            .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\n            .rangeRound([height - margin.bottom, margin.top])\n    \n        // --------------------------------------\n        var xAxis = g => g\n            .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n            .call(d3.axisBottom(x)\n                .tickValues(d3.utcMonday\n                    .every(width > 720 ? 1 : 2)\n                    .range(data[0].date, data[data.length - 1].date))\n                .tickFormat(d3.utcFormat(\"%-m/%-d\")))\n            .call(g => g.select(\".domain\").remove())\n    \n        // -----------------------------------------\n        var yAxis = g => g\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .call(d3.axisLeft(y)\n                .tickFormat(d3.format(\"$~f\"))\n                .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\n            .call(g => g.selectAll(\".tick line\").clone()\n                .attr(\"stroke-opacity\", 0.2)\n                .attr(\"x2\", width - margin.left - margin.right))\n            .call(g => g.select(\".domain\").remove())\n    \n        // -------------------------------------\n        var formatDate = d3.utcFormat(\"%B %-d, %Y\");\n    \n        var formatValue = d3.format(\".2f\");\n    \n    \n        svg.append(\"g\")\n            .call(xAxis);\n    \n        svg.append(\"g\")\n            .call(yAxis);\n    \n        const g = svg.append(\"g\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"stroke\", \"black\")\n            .selectAll(\"g\")\n            .data(data)\n            .join(\"g\")\n            .attr(\"transform\", d => {return `translate(${x(d.date)},0)`});\n    \n    \n        g.append(\"line\")\n            .attr(\"y1\", d => y(d.low))\n            .attr(\"y2\", d => y(d.high));\n    \n        g.append(\"line\")\n            .attr(\"y1\", d => y(d.open))\n            .attr(\"y2\", d => y(d.close))\n            .attr(\"stroke-width\", x.bandwidth())\n            .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\n                : d.close > d.open ? d3.schemeSet1[2]\n                    : d3.schemeSet1[8]);\n    \n        g.append(\"title\")\n            .text(d => `${formatDate(d.date)}\n            Open: ${d.open}\n            Close: ${formatValue(d.close)} (${this.formatChange(d.open, d.close)})\n            Low: ${formatValue(d.low)}\n            High: ${formatValue(d.high)}`);\n    \n        }\n\n    render() {\n\n        return (\n            <div>\n                <SearchBar onSearch={this.handleSearch}></SearchBar>\n            </div>\n        );\n    }\n}\n\nexport default Chart;","import React from 'react';\nimport Chart from './chart';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chart />\n      </header>\n      <div className=\"chart-area\">\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}